version: "{build}"

image: Visual Studio 2017

branches:
  only:
    - main
    - /v\d+\..+/
    - /release.*/
    - appveyor
    - hunter

clone_depth: 100

environment:
  matrix:
    - CUDA_VER: "12.2.2"
      # Pascal (60,61,62), Volta (70,72), Turing (75), Ampere (80,86,87),
      # Ada (89), Hopper (90) â€” all supported by CUDA 12.2
      XHASH_CUDA_ARCHS: "60;61;62;70;72;75;80;86;87;89;90"
  HUNTER_CACHE_TOKEN:
    secure: VnpF1MH5MEFvUI5MiMMMFlmbDdst+bfom5ZFVgalYPp/SYDhbejjXJm9Dla/IgpC

cache:
  - C:\CUDAInstallers\cuda_12.2.2_537.13_windows.exe -> appveyor.yml

install: |
  git submodule update --init --recursive

  rem ----- Map CUDA_VER -> installer filename/URL and subpackages -----
  if "%CUDA_VER%"=="12.2.2" set "CUDA_ARCHIVE=cuda_12.2.2_537.13_windows.exe"
  if "%CUDA_VER%"=="12.2.2" set "CUDA_URL=https://developer.download.nvidia.com/compute/cuda/12.2.2/local_installers/%CUDA_ARCHIVE%"
  if "%CUDA_VER%"=="12.2.2" set "CUDA_SUBPKGS=nvcc_12.2 cudart_12.2 nvrtc_12.2 nvrtc_dev_12.2 nsight_vse_12.2 visual_studio_integration_12.2"

  if not exist "C:\CUDAInstallers" mkdir "C:\CUDAInstallers"
  if exist "C:\CUDAInstallers\%CUDA_ARCHIVE%" echo Using cached installer: C:\CUDAInstallers\%CUDA_ARCHIVE%
  if not exist "C:\CUDAInstallers\%CUDA_ARCHIVE%" echo Downloading %CUDA_ARCHIVE% ...
  if not exist "C:\CUDAInstallers\%CUDA_ARCHIVE%" curl -L "%CUDA_URL%" -o "C:\CUDAInstallers\%CUDA_ARCHIVE%"

  rem ----- Silent install (outer EXE): only needed subpackages, no reboot -----
  "C:\CUDAInstallers\%CUDA_ARCHIVE%" -s %CUDA_SUBPKGS% -n

  rem ----- Set CUDA_PATH and PATH -----
  set "CUDA_MAJOR_MINOR=%CUDA_VER:~0,4%"
  set "CUDA_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v%CUDA_MAJOR_MINOR%"
  set "PATH=%CUDA_PATH%\bin;%PATH%"

  nvcc -V

  rem Python tools
  set "PATH=C:\Python39-x64;C:\Python39-x64\Scripts;%PATH%"
  pip install --disable-pip-version-check requests gitpython

build_script:
  - call "%ProgramFiles(x86)%\Microsoft Visual Studio\2017\Community\Common7\Tools\VsMSBuildCmd.bat"
  - set CMAKE_ARGS=-G "Visual Studio 15 2017 Win64" -H. -Bbuild -DXHASH_CUDA_ARCHS=%XHASH_CUDA_ARCHS% -DHUNTER_JOBS_NUMBER=%NUMBER_OF_PROCESSORS%
  - cmake %CMAKE_ARGS%
  - cmake --build build --config Release --target package
  - ps: |
      . build/hashwarp/buildinfo.ps1
      mv build/hashwarp.zip build/$env:project_name-$env:project_version-cuda$env:CUDA_VER-$env:system_name-$env:system_processor.zip

artifacts:
  - path: build/hashwarp-*.zip
    name: hashwarp
